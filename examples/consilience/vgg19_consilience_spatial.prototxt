name: "VGG19_CONSILIENCENET"

layers {
  name: "data"
  type: CONSILIENCE_DATA
  top: "rgbdata"
  top: "label"
  top: "flowdata"
  consilience_data_param {
    source: "data/ucf101/train1.txt"
    image_dir: "data/ucf101/ucf101_image/"
    flow_dir: "data/ucf101/ucf101_opt/"
		shuffle: true
    batch_size: 6
		input_type: CONSILIENCE
  }
  transform_param {
    crop_size: 224
		mean_file: "data/ucf101/ucf101_rgb_mean.binaryproto"
		flow_mean_file: "data/ucf101/ucf101_flow_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}
layers {
  name: "data"
  type: CONSILIENCE_DATA
  top: "rgbdata"
  top: "label"
  top: "flowdata"
  consilience_data_param {
    source: "data/ucf101/test1.txt"
    image_dir: "data/ucf101/ucf101_image/"
    flow_dir: "data/ucf101/ucf101_opt/"
		shuffle: true
    batch_size: 6
		input_type: CONSILIENCE
  }
  transform_param {
    crop_size: 224
		mean_file: "data/ucf101/ucf101_rgb_mean.binaryproto"
		flow_mean_file: "data/ucf101/ucf101_flow_mean.binaryproto"
    mirror: false
  }
  include: { phase: TEST }
}

# spatialnet
layers { bottom: "rgbdata" top: "rgb_conv1_1" name: "rgb_conv1_1" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 64 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv1_1" top: "rgb_conv1_1" name: "relu1_1" type: RELU }
layers { bottom: "rgb_conv1_1" top: "rgb_conv1_2" name: "rgb_conv1_2" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 64 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv1_2" top: "rgb_conv1_2" name: "relu1_2" type: RELU }
layers { bottom: "rgb_conv1_2" top: "pool1" name: "pool1" type: POOLING
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layers { bottom: "pool1" top: "rgb_conv2_1" name: "rgb_conv2_1" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 128 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv2_1" top: "rgb_conv2_1" name: "relu2_1" type: RELU }
layers { bottom: "rgb_conv2_1" top: "rgb_conv2_2" name: "rgb_conv2_2" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 128 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv2_2" top: "rgb_conv2_2" name: "relu2_2" type: RELU }
layers { bottom: "rgb_conv2_2" top: "pool2" name: "pool2" type: POOLING
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layers { bottom: "pool2" top: "rgb_conv3_1" name: "rgb_conv3_1" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 256 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv3_1" top: "rgb_conv3_1" name: "relu3_1" type: RELU }
layers { bottom: "rgb_conv3_1" top: "rgb_conv3_2" name: "rgb_conv3_2" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 256 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv3_2" top: "rgb_conv3_2" name: "relu3_2" type: RELU }
layers { bottom: "rgb_conv3_2" top: "rgb_conv3_3" name: "rgb_conv3_3" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 256 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv3_3" top: "rgb_conv3_3" name: "relu3_3" type: RELU }
layers { bottom: "rgb_conv3_3" top: "rgb_conv3_4" name: "rgb_conv3_4" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 256 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv3_4" top: "rgb_conv3_4" name: "relu3_4" type: RELU }
layers { bottom: "rgb_conv3_4" top: "pool3" name: "pool3" type: POOLING
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layers { bottom: "pool3" top: "rgb_conv4_1" name: "rgb_conv4_1" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv4_1" top: "rgb_conv4_1" name: "relu4_1" type: RELU }
layers { bottom: "rgb_conv4_1" top: "rgb_conv4_2" name: "rgb_conv4_2" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv4_2" top: "rgb_conv4_2" name: "relu4_2" type: RELU }
layers { bottom: "rgb_conv4_2" top: "rgb_conv4_3" name: "rgb_conv4_3" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv4_3" top: "rgb_conv4_3" name: "relu4_3" type: RELU }
layers { bottom: "rgb_conv4_3" top: "rgb_conv4_4" name: "rgb_conv4_4" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv4_4" top: "rgb_conv4_4" name: "relu4_4" type: RELU }
layers { bottom: "rgb_conv4_4" top: "pool4" name: "pool4" type: POOLING
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }
layers { bottom: "pool4" top: "rgb_conv5_1" name: "rgb_conv5_1" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv5_1" top: "rgb_conv5_1" name: "relu5_1" type: RELU }
layers { bottom: "rgb_conv5_1" top: "rgb_conv5_2" name: "rgb_conv5_2" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv5_2" top: "rgb_conv5_2" name: "relu5_2" type: RELU }
layers { bottom: "rgb_conv5_2" top: "rgb_conv5_3" name: "rgb_conv5_3" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv5_3" top: "rgb_conv5_3" name: "relu5_3" type: RELU }
layers { bottom: "rgb_conv5_3" top: "rgb_conv5_4" name: "rgb_conv5_4" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 pad: 1 kernel_size: 3 } }
layers { bottom: "rgb_conv5_4" top: "rgb_conv5_4" name: "relu5_4" type: RELU }
layers { bottom: "rgb_conv5_4" top: "rgb_pool5" name: "rgb_pool5" type: POOLING
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

# temporalnet
layers { bottom: "flowdata" top: "flow_conv1" name: "flow_conv1" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 96 kernel_size: 7 stride: 2 pad:1 } }
layers { bottom: "flow_conv1" top: "flow_conv1" name: "flow_relu1" type: RELU }
layers { bottom: "flow_conv1" top: "flow_norm1" name: "flow_norm1" type: LRN
  lrn_param { local_size: 5 alpha: 0.0001 beta: 0.75 } }
layers { bottom: "flow_norm1" top: "flow_pool1" name: "flow_pool1" type: POOLING
  pooling_param { pool: MAX kernel_size: 3 stride: 2 } }
layers { bottom: "flow_pool1" top: "flow_conv2" name: "flow_conv2" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 256 kernel_size: 5 stride: 2 pad: 2 } }
layers { bottom: "flow_conv2" top: "flow_conv2" name: "flow_relu2" type: RELU }
layers { bottom: "flow_conv2" top: "flow_pool2" name: "flow_pool2" type: POOLING
  pooling_param { pool: MAX kernel_size: 3 stride: 2 } }
layers { bottom: "flow_pool2" top: "flow_conv3" name: "flow_conv3" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 kernel_size: 3 stride: 1 pad: 1 } }
layers { bottom: "flow_conv3" top: "flow_conv3" name: "flow_relu3" type: RELU }
layers { bottom: "flow_conv3" top: "flow_conv4" name: "flow_conv4" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 kernel_size: 3 stride: 1 pad: 1 } }
layers { bottom: "flow_conv4" top: "flow_conv4" name: "flow_relu4" type: RELU }
layers { bottom: "flow_conv4" top: "flow_conv5" name: "flow_conv5" type: CONVOLUTION
  blobs_lr: 0 blobs_lr: 0 convolution_param { num_output: 512 kernel_size: 3 stride: 1 pad: 1 } }
layers { bottom: "flow_conv5" top: "flow_conv5" name: "flow_relu5" type: RELU }
layers { bottom: "flow_conv5" top: "flow_feat" name: "flow_pool5" type: POOLING
  pooling_param { pool: MAX kernel_size: 3 stride: 2 } }

# consilience

layers { type: SLICE name: 'rgb_slice' bottom: 'rgb_pool5' 
	top: "slice1" top: "slice2" top: "slice3" top: "slice4" top: "slice5" top: "slice6" 
	top: "slice7" top: "slice8" top: "slice9" top: "slice10"
	slice_param { slice_dim: 0 slice_point: 6 slice_point: 12 slice_point: 18
	slice_point: 24 slice_point: 30 slice_point: 36 slice_point: 42 slice_point: 48 slice_point: 54 } }

#	slice_param { slice_dim: 0 slice_point: 24 slice_point: 48 slice_point: 72
#	slice_point: 96 slice_point: 120 slice_point: 144 slice_point: 168 slice_point: 192 slice_point: 216 } }

#	slice_param { slice_dim: 0 slice_point: 16 slice_point: 32 slice_point: 48
#	slice_point: 64 slice_point: 80 slice_point: 96 slice_point: 112 slice_point: 128 slice_point: 144} }

# slice_param { slice_dim: 0 slice_point: 50 slice_point: 100 slice_point: 150
# slice_point: 200 slice_point: 250 slice_point: 300 slice_point: 350 slice_point: 400 slice_point: 450 } }

#	slice_param { slice_dim: 0 slice_point: 32 slice_point: 64 slice_point: 96 
#	slice_point: 128 slice_point: 160 slice_point: 192 slice_point: 224 slice_point: 256 slice_point: 288 } }

layers { type: ELTWISE name: 'rgb_slice_max' 
	bottom: 'slice1' bottom: 'slice2' bottom: 'slice3' bottom: 'slice4' bottom: 'slice5' 
	bottom: 'slice6' bottom: 'slice7' bottom: 'slice8' bottom: 'slice9' bottom: 'slice10'
	top: 'rgb_feat' eltwise_param { operation: MAX} }

layers { bottom: "flow_feat" top: "flow_feat" name: "flow_norm" type: NORMALIZE } 
layers { bottom: "flow_feat" top: "flow_comb" name: "flow_comb" type: CONVOLUTION
 blobs_lr: 1 convolution_param { num_output: 512 kernel_size: 1 stride: 1 bias_term: false
 weight_filler { type: "xavier" } } }

 layers { type: ELTWISE name: 'consilience' bottom: 'rgb_feat' bottom: 'flow_comb' 
	top: 'consilience' eltwise_param { operation: PROD } }

layers {
  bottom: "consilience"
  top: "cons_fc6"
  name: "cons_fc6"
  type: INNER_PRODUCT
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  bottom: "cons_fc6"
  top: "cons_fc6"
  name: "relu6"
  type: RELU
}
layers {
  bottom: "cons_fc6"
  top: "cons_fc6"
  name: "drop6"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}

layers {
	bottom: "cons_fc6"
  top: "cons_fc7"
  name: "cons_fc7"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  bottom: "cons_fc7"
  top: "cons_fc7"
  name: "relu7"
  type: RELU
}
layers {
  bottom: "cons_fc7"
  top: "cons_fc7"
  name: "drop7"
  type: DROPOUT
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  bottom: "cons_fc7"
  top: "cons_fc8"
  name: "cons_fc8"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  type: INNER_PRODUCT
  inner_product_param {
    num_output: 101
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layers {
  name: "accuracy"
  type: ACCURACY
  bottom: "cons_fc8"
  bottom: "label"
  top: "accuracy"
  include: { phase: TEST }
}
layers {
  name: "loss"
  type: SOFTMAX_LOSS
  bottom: "cons_fc8"
  bottom: "label"
  top: "loss"
}
